version: '3'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: dockerize -wait tcp://db:3306 bundle exec unicorn -p 3000 -c /var/www/rails/myapp/config/unicorn.conf.rb 
    tty: true #pry-byebugを使えるようにする
    stdin_open: true
    depends_on:
      - db # DB側のコンテナが出来上がってからwebを実行する
    ports:
      - "3000:3000" # ホストからゲストへポートフォワード
    volumes:
      - .:/var/www/rails/myapp:cached # ソースコード変更したらDocker側も即反映されるように
      - tmp-data:/var/www/rails/myapp/tmp/sockets
      - ./log:/var/www/rails/myapp/log
      - public-data:/var/www/rails/myapp/public

  db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports: 
      - '3306:3306' # ホストからゲストへポートフォワード
    environment:
      MYSQL_DATABASE: docker_development
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: yuki
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: always #明示的にstopさせるまでリスタートする。（失敗するたび遅延あり）
    volumes:
      - tmp-data:/var/www/rails/myapp/tmp/sockets
      - public-data:/var/www/rails/myapp/public
      - ./nginx/log:/var/log/nginx
    depends_on:
      - web # DB側のコンテナが出来上がってからwebを実行する

#railsのファイルをnginxに共有
volumes:
  public-data:
  tmp-data:
  mysql-data:
